// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMark.Data;

namespace SuperMark.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200221204103_ProductosStock")]
    partial class ProductosStock
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.Bitacora", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("IdEmpleado")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("IdBitacora")
                        .HasName("PK__Bitacora__ED3A1B13E4385C1D");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblCargo", b =>
                {
                    b.Property<int>("IdCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCargo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCargo");

                    b.ToTable("TblCargo");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdCategoria")
                        .HasName("PK__Tbl_Cate__A3C02A102F57094C");

                    b.ToTable("Tbl_Categoria");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Afiliado")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Dui")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<string>("Nit")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdCliente");

                    b.ToTable("Tbl_Cliente");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblCompra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("EstadoProduccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaProduccion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdCompra")
                        .HasName("PK__Tbl_Prod__3137BD837045DF9A");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Tbl_Compra");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDepartamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdZona")
                        .HasColumnType("int");

                    b.Property<string>("Isocode")
                        .IsRequired()
                        .HasColumnName("ISOCode")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdDepartamento");

                    b.HasIndex("IdZona");

                    b.ToTable("Tbl_Departamento");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__Tbl_Deta__2BD8C21E89008536");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("Tbl_DetalleCompra");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetalleInventario", b =>
                {
                    b.Property<int>("IdDetalleInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_DetalleInventario")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdInventario")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdDetalleInventario");

                    b.HasIndex("IdInventario");

                    b.HasIndex("IdProducto");

                    b.ToTable("Tbl_DetalleInventario");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdDetallePedido")
                        .HasName("PK__Tbl_Deta__48AFFD9500CF4AEC");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProducto");

                    b.ToTable("Tbl_DetallePedido");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(9, 2)");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__Tbl_Deta__AAA5CEC2D8E809F3");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("Tbl_DetalleVenta");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDireccionCliente", b =>
                {
                    b.Property<int>("IdDireccionCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.HasKey("IdDireccionCliente")
                        .HasName("PK__Tbl_Dire__7A8F4C77E41CA788");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("Tbl_DireccionCliente");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDireccionProveedor", b =>
                {
                    b.Property<int>("IdDireccionProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdDireccionProveedor");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Tbl_DireccionProveedor");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDireccionSucursal", b =>
                {
                    b.Property<int>("IdDireccionSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.HasKey("IdDireccionSucursal");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("Tbl_DireccionSucursal");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblImagenProducto", b =>
                {
                    b.Property<int>("IdImagenProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdImagenProducto")
                        .HasName("PK__Tbl_Imag__B5894BD95DD7FFD0");

                    b.HasIndex("IdProducto");

                    b.ToTable("Tbl_ImagenProducto");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblInventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInventario")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("NombreDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdInventario");

                    b.ToTable("Tbl_Inventario");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblMarca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("IdMarca")
                        .HasName("PK__Tbl_Marc__4076A8876DF67E7B");

                    b.ToTable("Tbl_Marca");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblMunicipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdMunicipio");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("Tbl_Municipio");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblPedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("EstadoPedido")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDespacho")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("TipoPedido")
                        .HasColumnType("int");

                    b.Property<string>("usuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdPedido")
                        .HasName("PK__Tbl_Pedi__9D335DC3CF2AC70D");

                    b.HasIndex("IdCliente");

                    b.HasIndex("usuarioId");

                    b.ToTable("Tbl_Pedido");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblProducto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodigoProducto")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<decimal?>("PrecioConsumidor")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal?>("PrecioDetalle")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal?>("PrecioNeto")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.HasKey("IdProducto")
                        .HasName("PK__Tbl_Prod__785B009E90AE744C");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.ToTable("Tbl_Producto");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblProveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TipoProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdProveedor");

                    b.ToTable("Tbl_Proveedor");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblSucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdDireccionSucursal")
                        .HasColumnType("int");

                    b.Property<string>("NombreSucursal")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdSucursal");

                    b.HasIndex("IdDireccionSucursal");

                    b.ToTable("Tbl_Sucursal");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblTelefonoCliente", b =>
                {
                    b.Property<int>("IdTelefonoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdTelefonoCliente")
                        .HasName("PK__Tbl_Tele__C37978471B889E79");

                    b.HasIndex("IdCliente");

                    b.ToTable("Tbl_TelefonoCliente");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblTelefonoProveedor", b =>
                {
                    b.Property<int>("IdTelefonoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.HasKey("IdTelefonoProveedor");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Tbl_TelefonoProveedor");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblUbicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Ubicacion")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadProductos")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("IdSucursal")
                        .HasColumnName("Id_Sucursal")
                        .HasColumnType("int");

                    b.HasKey("IdUbicacion");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Tbl_Ubicacion");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblUsuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CargoIdCargo")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CargoIdCargo");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblVenta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoFactura")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("CondicionPago")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal>("Descuento")
                        .HasColumnType("numeric(4, 2)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFactura")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("TipoFactura")
                        .HasColumnType("int");

                    b.Property<int>("TipoPrecio")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal>("TotalPagado")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<string>("usuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdVenta")
                        .HasName("PK__Tbl_Vent__BC1240BD5CA4F2D7");

                    b.HasIndex("IdPedido");

                    b.HasIndex("usuarioId");

                    b.ToTable("Tbl_Venta");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblZona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nchar(25)")
                        .IsFixedLength(true)
                        .HasMaxLength(25);

                    b.HasKey("IdZona");

                    b.ToTable("Tbl_Zona");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblCompra", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblProveedor", "IdProveedorNavigation")
                        .WithMany("TblCompra")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Tbl_Compra_Tbl_Proveedor")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDepartamento", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblZona", "IdZonaNavigation")
                        .WithMany("TblDepartamento")
                        .HasForeignKey("IdZona")
                        .HasConstraintName("FK_Tbl_Departamento_Tbl_Zona")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetalleCompra", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblCompra", "IdCompraNavigation")
                        .WithMany("TblDetalleCompra")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("Fk_DProduccion_Tbl_Produc")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblProducto", "IdProductoNavigation")
                        .WithMany("TblDetalleCompra")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("Fk_DProduccion_Tbl_Producto")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetalleInventario", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblInventario", "IdInventarioNavigation")
                        .WithMany("TblDetalleInventario")
                        .HasForeignKey("IdInventario")
                        .HasConstraintName("FK_Tbl_DetalleInventario_Tbl_Inventario")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblProducto", "CodigoProductoNavigation")
                        .WithMany("TblDetalleInventario")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Tbl_DetalleInventario_Tbl_Producto")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetallePedido", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblPedido", "IdPedidoNavigation")
                        .WithMany("TblDetallePedido")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("Fk_DetallePedido_Tbl_Pedido")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblProducto", "CodigoProductoNavigation")
                        .WithMany("TblDetallePedido")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("Fk_Tbl_DetallePedido_Tbl_Producto")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDetalleVenta", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblProducto", "CodigoProductoNavigation")
                        .WithMany("TblDetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("Fk_Tbl_DetalleVenta_Tbl_Producto")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblVenta", "IdVentaNavigation")
                        .WithMany("TblDetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK_Tbl_DetalleVenta_Tbl_Venta")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDireccionCliente", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblCliente", "IdClienteNavigation")
                        .WithMany("TblDireccionCliente")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Tbl_DireccionCliente_Tbl_Cliente");

                    b.HasOne("SuperMark.Data.Entities.TblMunicipio", "IdMunicipioNavigation")
                        .WithMany("TblDireccionCliente")
                        .HasForeignKey("IdMunicipio")
                        .HasConstraintName("FK_Tbl_DireccionCliente_Tbl_Municipio1")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDireccionProveedor", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblMunicipio", "IdMunicipioNavigation")
                        .WithMany("TblDireccionProveedor")
                        .HasForeignKey("IdMunicipio")
                        .HasConstraintName("FK_Tbl_DireccionProveedor_Tbl_Municipio")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblProveedor", "IdProveedorNavigation")
                        .WithMany("TblDireccionProveedor")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Tbl_DireccionProveedor_Tbl_Proveedor1")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblDireccionSucursal", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblMunicipio", "IdMunicipioNavigation")
                        .WithMany("TblDireccionSucursal")
                        .HasForeignKey("IdMunicipio")
                        .HasConstraintName("FK_Tbl_DireccionSucursal_Tbl_Municipio")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblImagenProducto", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblProducto", "CodigoProductoNavigation")
                        .WithMany("TblImagenProducto")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("Fk_ImagenProducto_Tbl_Producto")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblMunicipio", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblDepartamento", "IdDepartamentoNavigation")
                        .WithMany("TblMunicipio")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("FK_Tbl_Municipio_Tbl_Departamento")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblPedido", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblCliente", "IdClienteNavigation")
                        .WithMany("TblPedido")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Tbl_Pedido_Tbl_Cliente")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblUsuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblProducto", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblCategoria", "IdCategoriaNavigation")
                        .WithMany("TblProducto")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("Fk_Categoria_Tbl_Producto")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblMarca", "IdMarcaNavigation")
                        .WithMany("TblProducto")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("Fk_Marca_Tbl_Producto")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblSucursal", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblDireccionSucursal", "IdDireccionSucursalNavigation")
                        .WithMany("TblSucursal")
                        .HasForeignKey("IdDireccionSucursal")
                        .HasConstraintName("FK_Tbl_Sucursal_Tbl_DireccionSucursal")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblTelefonoCliente", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblCliente", "IdClienteNavigation")
                        .WithMany("TblTelefonoCliente")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Tbl_TelefonoCliente_Tbl_Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblTelefonoProveedor", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblProveedor", "IdProveedorNavigation")
                        .WithMany("TblTelefonoProveedor")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Tbl_TelefonoProveedor_Tbl_Proveedor")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblUbicacion", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblProducto", "CodigoProductoNavigation")
                        .WithMany("TblUbicacion")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Tbl_Ubicacion_Tbl_Producto")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblSucursal", "IdSucursalNavigation")
                        .WithMany("TblUbicacion")
                        .HasForeignKey("IdSucursal")
                        .HasConstraintName("FK_Tbl_Ubicacion_Tbl_Sucursal")
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblUsuario", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblCargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoIdCargo");
                });

            modelBuilder.Entity("SuperMark.Data.Entities.TblVenta", b =>
                {
                    b.HasOne("SuperMark.Data.Entities.TblPedido", "IdPedidoNavigation")
                        .WithMany("TblVenta")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("Fk_VentaPedido_Tbl_Pedido")
                        .IsRequired();

                    b.HasOne("SuperMark.Data.Entities.TblUsuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
